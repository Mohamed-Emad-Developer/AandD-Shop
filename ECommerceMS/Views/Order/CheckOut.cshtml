@using ECommerceMS.ViewModel
@model OrderDetailsViewModel
@{
    ViewData["title"] = "Checkout";
}
@section Style{
    <style>
        :root {
            --main-color: #319E50;
        }
        .zoom {
            transition: transform .2s;
            margin: 0 auto;
        }

        .zoom:hover {
            -ms-transform: scale(1.1); /* IE 9 */
            -webkit-transform: scale(1.1); /* Safari 3-8 */
            transform: scale(1.1); 
        }
    </style>
}
<div class="row">
    <div class="col-lg-6">
        <form method="post" asp-action="ConfirmOrder" asp-controller="Order">
            <input type="hidden" asp-for="CartID" class="form-control" />
            <input type="hidden" asp-for="TotalCost" class="form-control" />
            <div class="mb-3">
                <label asp-for="Name" class="form-label"></label>
                <input asp-for="Name" class="form-control" />
                <span class="text-danger" asp-validation-for="Name"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Adress" class="form-label"></label>
                <input asp-for="Adress" class="form-control" />
                <span class="text-danger" asp-validation-for="Adress"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Phone" class="form-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span class="text-danger" asp-validation-for="Phone"></span>
            </div>
            <!------------------->
            <div id="paypal-btn"></div>
            <input type="submit" value="Confirm Order" class="btn btn-success mb-3" />
        </form>
    </div>
    <div class="col-lg-6 card text-center">
        <div class="card-header font-weight-bold text-muted">
            Order Summry
        </div>
        <div class="card-body">
            @foreach(var item in ViewBag.ProductCart)
            {
            <div class="card">
                <div style="display:flex; flex:1 1 auto">
                    <div class="img-square-wrapper img-fluid bg-image hover-zoom zoom">
                        <img  src="~/Images/products/@item.Product.Image" alt="Card image cap" class="rounded-circle" style="width:65px;">
                    </div>
                    <div class="card-body p-1 m-1">
                        <h4 class="card-title">@item.Product.Name</h4>
                        <p class="card-text text-break">@item.Product.Description</p>
                        <p class="card-text">
                            <div>
                                <span class="font-weight-bold">Size: </span>@item.Product.Size
                            </div>
                            <div>
                                <span class="font-weight-bold">Quantity: </span>@item.Quantity
                            </div>
                            <div>
                                <span class="font-weight-bold text-success">Price: </span>@item.Product.Price EGP
                            </div>
                        </p>
                    </div>
                </div>
            </div>
            }
        </div> 
        <div class="card-footer text-muted  text-center">
           <span class="font-weight-bold">Total Cost: </span> @Model.TotalCost EGP
        </div>
    </div>
</div>


@section Scripts{

    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js">
    </script>

    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>

        let _total = @Html.Raw(@Model.TotalCost);

        paypal.Button.render({
            //Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'AfyURhltwiSLOqeD5yXKiOiXVOJhTOkSm0NhDxhM4x_LlcRx6xTazgvY59hffJn4_5tPn-GjlVJTXEu4'
            },

            //Customize button
            locale: 'en_US', //ar_EG
            style: {
                size: 'medium',
                color: 'gold',
                shape: 'pill'
            },
            commit: true,

            //Set up a payment
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: _total,
                            currency: 'USD' //EGP
                        }
                    }]
                });
            },

            //Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                    var url = '@Url.Action("ConfirmOrder", "Order", new { })';
                    window.location.href = url;
                });
            }

        }, '#paypal-btn')
    </script>
    }